State 5 conflicts: 1 shift/reduce
State 9 conflicts: 1 shift/reduce
State 24 conflicts: 12 shift/reduce
State 54 conflicts: 12 shift/reduce
State 58 conflicts: 12 shift/reduce
State 59 conflicts: 12 shift/reduce
State 60 conflicts: 8 shift/reduce
State 61 conflicts: 8 shift/reduce
State 62 conflicts: 8 shift/reduce
State 63 conflicts: 8 shift/reduce
State 64 conflicts: 12 shift/reduce
State 65 conflicts: 12 shift/reduce
State 66 conflicts: 12 shift/reduce
State 67 conflicts: 12 shift/reduce
State 68 conflicts: 12 shift/reduce
State 69 conflicts: 12 shift/reduce


Grammar

    0 $accept: program "end of file"

    1 program: stmts

    2 stmts: stmt
    3      | stmts stmt

    4 stmt: expr
    5     | var_decl
    6     | conditional
    7     | for_loop
    8     | for_range

    9 for_loop: "for" "(" expr "," expr "," expr ")" block

   10 for_range: "for" identifier "in" "range" "decimal" block

   11 block: "{" stmts "}"

   12 conditional: "if" expr block "else" block
   13            | "if" expr block

   14 var_decl: "identifier" "identifier"
   15         | "identifier" "identifier" "=" expr

   16 literals: "decimal"
   17         | "fraction"
   18         | "stringlit"

   19 expr: identifier "=" expr
   20     | identifier "(" call_args ")"
   21     | identifier
   22     | literals
   23     | binop_expr
   24     | unaryop_expr
   25     | compare_expr
   26     | array_access
   27     | "(" expr ")"

   28 identifier: "identifier"

   29 call_args: %empty
   30          | expr
   31          | call_args "," expr

   32 array_access: identifier "[" expr "]"
   33             | array_access "[" expr "]"

   34 binop_expr: expr "and" expr
   35           | expr "or" expr
   36           | expr "+" expr
   37           | expr "-" expr
   38           | expr "*" expr
   39           | expr "/" expr

   40 compare_expr: expr ">" expr
   41             | expr ">=" expr
   42             | expr "<" expr
   43             | expr "<=" expr
   44             | expr "==" expr
   45             | expr "!=" expr

   46 unaryop_expr: "not" expr


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    "and" (258) 34
    "or" (259) 35
    "not" (260) 46
    "for" (261) 9 10
    "in" (262) 10
    "range" (263) 10
    "if" (264) 12 13
    "else" (265) 12
    "=" (266) 15 19
    "+" (267) 36
    "-" (268) 37
    "*" (269) 38
    "/" (270) 39
    "(" (271) 9 20 27
    ")" (272) 9 20 27
    "{" (273) 11
    "}" (274) 11
    "[" (275) 32 33
    "]" (276) 32 33
    "," (277) 9 31
    ">" (278) 40
    ">=" (279) 41
    "<" (280) 42
    "<=" (281) 43
    "!=" (282) 45
    "==" (283) 44
    "identifier" <std::unique_ptr<identifier>> (284) 14 15 28
    "decimal" <std::unique_ptr<decimal>> (285) 10 16
    "fraction" <std::unique_ptr<fraction>> (286) 17
    "stringlit" <std::unique_ptr<stringlit>> (287) 18


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    identifier <std::unique_ptr<identifier>> (34)
        on left: 28
        on right: 10 19 20 21 32
    expr <std::unique_ptr<expression>> (35)
        on left: 19 20 21 22 23 24 25 26 27
        on right: 4 9 12 13 15 19 27 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
    literals <std::unique_ptr<expression>> (36)
        on left: 16 17 18
        on right: 22
    binop_expr <std::unique_ptr<expression>> (37)
        on left: 34 35 36 37 38 39
        on right: 23
    unaryop_expr <std::unique_ptr<expression>> (38)
        on left: 46
        on right: 24
    compare_expr <std::unique_ptr<expression>> (39)
        on left: 40 41 42 43 44 45
        on right: 25
    stmts <std::unique_ptr<block>> (40)
        on left: 2 3
        on right: 1 3 11
    program <std::unique_ptr<block>> (41)
        on left: 1
        on right: 0
    block <std::unique_ptr<block>> (42)
        on left: 11
        on right: 9 10 12 13
    stmt <std::unique_ptr<statement>> (43)
        on left: 4 5 6 7 8
        on right: 2 3
    conditional <std::unique_ptr<statement>> (44)
        on left: 12 13
        on right: 6
    for_loop <std::unique_ptr<statement>> (45)
        on left: 9
        on right: 7
    for_range <std::unique_ptr<statement>> (46)
        on left: 10
        on right: 8
    call_args <std::unique_ptr<std::vector<std::unique_ptr<expression>>>> (47)
        on left: 29 30 31
        on right: 20 31
    var_decl <std::unique_ptr<variable_declaration>> (48)
        on left: 14 15
        on right: 5
    array_access <std::unique_ptr<array_access>> (49)
        on left: 32 33
        on right: 26 33


State 0

    0 $accept: . program "end of file"

    "not"         shift, and go to state 1
    "for"         shift, and go to state 2
    "if"          shift, and go to state 3
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 5
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 10
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    stmts         go to state 15
    program       go to state 16
    stmt          go to state 17
    conditional   go to state 18
    for_loop      go to state 19
    for_range     go to state 20
    var_decl      go to state 21
    array_access  go to state 22


State 1

   46 unaryop_expr: "not" . expr

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 24
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 2

    9 for_loop: "for" . "(" expr "," expr "," expr ")" block
   10 for_range: "for" . identifier "in" "range" "decimal" block

    "("           shift, and go to state 25
    "identifier"  shift, and go to state 23

    identifier  go to state 26


State 3

   12 conditional: "if" . expr block "else" block
   13            | "if" . expr block

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 27
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 4

   27 expr: "(" . expr ")"

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 28
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 5

   14 var_decl: "identifier" . "identifier"
   15         | "identifier" . "identifier" "=" expr
   28 identifier: "identifier" .

    "identifier"  shift, and go to state 29

    "identifier"  [reduce using rule 28 (identifier)]
    $default      reduce using rule 28 (identifier)


State 6

   16 literals: "decimal" .

    $default  reduce using rule 16 (literals)


State 7

   17 literals: "fraction" .

    $default  reduce using rule 17 (literals)


State 8

   18 literals: "stringlit" .

    $default  reduce using rule 18 (literals)


State 9

   19 expr: identifier . "=" expr
   20     | identifier . "(" call_args ")"
   21     | identifier .
   32 array_access: identifier . "[" expr "]"

    "="  shift, and go to state 30
    "("  shift, and go to state 31
    "["  shift, and go to state 32

    "("       [reduce using rule 21 (expr)]
    $default  reduce using rule 21 (expr)


State 10

    4 stmt: expr .
   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    $default  reduce using rule 4 (stmt)


State 11

   22 expr: literals .

    $default  reduce using rule 22 (expr)


State 12

   23 expr: binop_expr .

    $default  reduce using rule 23 (expr)


State 13

   24 expr: unaryop_expr .

    $default  reduce using rule 24 (expr)


State 14

   25 expr: compare_expr .

    $default  reduce using rule 25 (expr)


State 15

    1 program: stmts .
    3 stmts: stmts . stmt

    "not"         shift, and go to state 1
    "for"         shift, and go to state 2
    "if"          shift, and go to state 3
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 5
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    $default  reduce using rule 1 (program)

    identifier    go to state 9
    expr          go to state 10
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    stmt          go to state 45
    conditional   go to state 18
    for_loop      go to state 19
    for_range     go to state 20
    var_decl      go to state 21
    array_access  go to state 22


State 16

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 46


State 17

    2 stmts: stmt .

    $default  reduce using rule 2 (stmts)


State 18

    6 stmt: conditional .

    $default  reduce using rule 6 (stmt)


State 19

    7 stmt: for_loop .

    $default  reduce using rule 7 (stmt)


State 20

    8 stmt: for_range .

    $default  reduce using rule 8 (stmt)


State 21

    5 stmt: var_decl .

    $default  reduce using rule 5 (stmt)


State 22

   26 expr: array_access .
   33 array_access: array_access . "[" expr "]"

    "["  shift, and go to state 47

    $default  reduce using rule 26 (expr)


State 23

   28 identifier: "identifier" .

    $default  reduce using rule 28 (identifier)


State 24

   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr
   46 unaryop_expr: "not" expr .

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    "and"     [reduce using rule 46 (unaryop_expr)]
    "or"      [reduce using rule 46 (unaryop_expr)]
    "+"       [reduce using rule 46 (unaryop_expr)]
    "-"       [reduce using rule 46 (unaryop_expr)]
    "*"       [reduce using rule 46 (unaryop_expr)]
    "/"       [reduce using rule 46 (unaryop_expr)]
    ">"       [reduce using rule 46 (unaryop_expr)]
    ">="      [reduce using rule 46 (unaryop_expr)]
    "<"       [reduce using rule 46 (unaryop_expr)]
    "<="      [reduce using rule 46 (unaryop_expr)]
    "!="      [reduce using rule 46 (unaryop_expr)]
    "=="      [reduce using rule 46 (unaryop_expr)]
    $default  reduce using rule 46 (unaryop_expr)


State 25

    9 for_loop: "for" "(" . expr "," expr "," expr ")" block

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 48
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 26

   10 for_range: "for" identifier . "in" "range" "decimal" block

    "in"  shift, and go to state 49


State 27

   12 conditional: "if" expr . block "else" block
   13            | "if" expr . block
   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    "{"    shift, and go to state 50
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    block  go to state 51


State 28

   27 expr: "(" expr . ")"
   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ")"    shift, and go to state 52
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44


State 29

   14 var_decl: "identifier" "identifier" .
   15         | "identifier" "identifier" . "=" expr

    "="  shift, and go to state 53

    $default  reduce using rule 14 (var_decl)


State 30

   19 expr: identifier "=" . expr

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 54
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 31

   20 expr: identifier "(" . call_args ")"

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    $default  reduce using rule 29 (call_args)

    identifier    go to state 9
    expr          go to state 55
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    call_args     go to state 56
    array_access  go to state 22


State 32

   32 array_access: identifier "[" . expr "]"

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 57
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 33

   34 binop_expr: expr "and" . expr

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 58
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 34

   35 binop_expr: expr "or" . expr

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 59
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 35

   36 binop_expr: expr "+" . expr

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 60
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 36

   37 binop_expr: expr "-" . expr

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 61
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 37

   38 binop_expr: expr "*" . expr

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 62
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 38

   39 binop_expr: expr "/" . expr

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 63
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 39

   40 compare_expr: expr ">" . expr

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 64
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 40

   41 compare_expr: expr ">=" . expr

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 65
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 41

   42 compare_expr: expr "<" . expr

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 66
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 42

   43 compare_expr: expr "<=" . expr

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 67
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 43

   45 compare_expr: expr "!=" . expr

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 68
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 44

   44 compare_expr: expr "==" . expr

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 69
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 45

    3 stmts: stmts stmt .

    $default  reduce using rule 3 (stmts)


State 46

    0 $accept: program "end of file" .

    $default  accept


State 47

   33 array_access: array_access "[" . expr "]"

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 70
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 48

    9 for_loop: "for" "(" expr . "," expr "," expr ")" block
   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ","    shift, and go to state 71
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44


State 49

   10 for_range: "for" identifier "in" . "range" "decimal" block

    "range"  shift, and go to state 72


State 50

   11 block: "{" . stmts "}"

    "not"         shift, and go to state 1
    "for"         shift, and go to state 2
    "if"          shift, and go to state 3
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 5
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 10
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    stmts         go to state 73
    stmt          go to state 17
    conditional   go to state 18
    for_loop      go to state 19
    for_range     go to state 20
    var_decl      go to state 21
    array_access  go to state 22


State 51

   12 conditional: "if" expr block . "else" block
   13            | "if" expr block .

    "else"  shift, and go to state 74

    $default  reduce using rule 13 (conditional)


State 52

   27 expr: "(" expr ")" .

    $default  reduce using rule 27 (expr)


State 53

   15 var_decl: "identifier" "identifier" "=" . expr

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 75
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 54

   19 expr: identifier "=" expr .
   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    "and"     [reduce using rule 19 (expr)]
    "or"      [reduce using rule 19 (expr)]
    "+"       [reduce using rule 19 (expr)]
    "-"       [reduce using rule 19 (expr)]
    "*"       [reduce using rule 19 (expr)]
    "/"       [reduce using rule 19 (expr)]
    ">"       [reduce using rule 19 (expr)]
    ">="      [reduce using rule 19 (expr)]
    "<"       [reduce using rule 19 (expr)]
    "<="      [reduce using rule 19 (expr)]
    "!="      [reduce using rule 19 (expr)]
    "=="      [reduce using rule 19 (expr)]
    $default  reduce using rule 19 (expr)


State 55

   30 call_args: expr .
   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    $default  reduce using rule 30 (call_args)


State 56

   20 expr: identifier "(" call_args . ")"
   31 call_args: call_args . "," expr

    ")"  shift, and go to state 76
    ","  shift, and go to state 77


State 57

   32 array_access: identifier "[" expr . "]"
   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    "]"    shift, and go to state 78
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44


State 58

   34 binop_expr: expr . "and" expr
   34           | expr "and" expr .
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    "and"     [reduce using rule 34 (binop_expr)]
    "or"      [reduce using rule 34 (binop_expr)]
    "+"       [reduce using rule 34 (binop_expr)]
    "-"       [reduce using rule 34 (binop_expr)]
    "*"       [reduce using rule 34 (binop_expr)]
    "/"       [reduce using rule 34 (binop_expr)]
    ">"       [reduce using rule 34 (binop_expr)]
    ">="      [reduce using rule 34 (binop_expr)]
    "<"       [reduce using rule 34 (binop_expr)]
    "<="      [reduce using rule 34 (binop_expr)]
    "!="      [reduce using rule 34 (binop_expr)]
    "=="      [reduce using rule 34 (binop_expr)]
    $default  reduce using rule 34 (binop_expr)


State 59

   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   35           | expr "or" expr .
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    "and"     [reduce using rule 35 (binop_expr)]
    "or"      [reduce using rule 35 (binop_expr)]
    "+"       [reduce using rule 35 (binop_expr)]
    "-"       [reduce using rule 35 (binop_expr)]
    "*"       [reduce using rule 35 (binop_expr)]
    "/"       [reduce using rule 35 (binop_expr)]
    ">"       [reduce using rule 35 (binop_expr)]
    ">="      [reduce using rule 35 (binop_expr)]
    "<"       [reduce using rule 35 (binop_expr)]
    "<="      [reduce using rule 35 (binop_expr)]
    "!="      [reduce using rule 35 (binop_expr)]
    "=="      [reduce using rule 35 (binop_expr)]
    $default  reduce using rule 35 (binop_expr)


State 60

   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   36           | expr "+" expr .
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    "and"     [reduce using rule 36 (binop_expr)]
    "or"      [reduce using rule 36 (binop_expr)]
    ">"       [reduce using rule 36 (binop_expr)]
    ">="      [reduce using rule 36 (binop_expr)]
    "<"       [reduce using rule 36 (binop_expr)]
    "<="      [reduce using rule 36 (binop_expr)]
    "!="      [reduce using rule 36 (binop_expr)]
    "=="      [reduce using rule 36 (binop_expr)]
    $default  reduce using rule 36 (binop_expr)


State 61

   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   37           | expr "-" expr .
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    "and"     [reduce using rule 37 (binop_expr)]
    "or"      [reduce using rule 37 (binop_expr)]
    ">"       [reduce using rule 37 (binop_expr)]
    ">="      [reduce using rule 37 (binop_expr)]
    "<"       [reduce using rule 37 (binop_expr)]
    "<="      [reduce using rule 37 (binop_expr)]
    "!="      [reduce using rule 37 (binop_expr)]
    "=="      [reduce using rule 37 (binop_expr)]
    $default  reduce using rule 37 (binop_expr)


State 62

   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   38           | expr "*" expr .
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    "and"     [reduce using rule 38 (binop_expr)]
    "or"      [reduce using rule 38 (binop_expr)]
    ">"       [reduce using rule 38 (binop_expr)]
    ">="      [reduce using rule 38 (binop_expr)]
    "<"       [reduce using rule 38 (binop_expr)]
    "<="      [reduce using rule 38 (binop_expr)]
    "!="      [reduce using rule 38 (binop_expr)]
    "=="      [reduce using rule 38 (binop_expr)]
    $default  reduce using rule 38 (binop_expr)


State 63

   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   39           | expr "/" expr .
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    "and"     [reduce using rule 39 (binop_expr)]
    "or"      [reduce using rule 39 (binop_expr)]
    ">"       [reduce using rule 39 (binop_expr)]
    ">="      [reduce using rule 39 (binop_expr)]
    "<"       [reduce using rule 39 (binop_expr)]
    "<="      [reduce using rule 39 (binop_expr)]
    "!="      [reduce using rule 39 (binop_expr)]
    "=="      [reduce using rule 39 (binop_expr)]
    $default  reduce using rule 39 (binop_expr)


State 64

   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   40             | expr ">" expr .
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    "and"     [reduce using rule 40 (compare_expr)]
    "or"      [reduce using rule 40 (compare_expr)]
    "+"       [reduce using rule 40 (compare_expr)]
    "-"       [reduce using rule 40 (compare_expr)]
    "*"       [reduce using rule 40 (compare_expr)]
    "/"       [reduce using rule 40 (compare_expr)]
    ">"       [reduce using rule 40 (compare_expr)]
    ">="      [reduce using rule 40 (compare_expr)]
    "<"       [reduce using rule 40 (compare_expr)]
    "<="      [reduce using rule 40 (compare_expr)]
    "!="      [reduce using rule 40 (compare_expr)]
    "=="      [reduce using rule 40 (compare_expr)]
    $default  reduce using rule 40 (compare_expr)


State 65

   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   41             | expr ">=" expr .
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    "and"     [reduce using rule 41 (compare_expr)]
    "or"      [reduce using rule 41 (compare_expr)]
    "+"       [reduce using rule 41 (compare_expr)]
    "-"       [reduce using rule 41 (compare_expr)]
    "*"       [reduce using rule 41 (compare_expr)]
    "/"       [reduce using rule 41 (compare_expr)]
    ">"       [reduce using rule 41 (compare_expr)]
    ">="      [reduce using rule 41 (compare_expr)]
    "<"       [reduce using rule 41 (compare_expr)]
    "<="      [reduce using rule 41 (compare_expr)]
    "!="      [reduce using rule 41 (compare_expr)]
    "=="      [reduce using rule 41 (compare_expr)]
    $default  reduce using rule 41 (compare_expr)


State 66

   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   42             | expr "<" expr .
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    "and"     [reduce using rule 42 (compare_expr)]
    "or"      [reduce using rule 42 (compare_expr)]
    "+"       [reduce using rule 42 (compare_expr)]
    "-"       [reduce using rule 42 (compare_expr)]
    "*"       [reduce using rule 42 (compare_expr)]
    "/"       [reduce using rule 42 (compare_expr)]
    ">"       [reduce using rule 42 (compare_expr)]
    ">="      [reduce using rule 42 (compare_expr)]
    "<"       [reduce using rule 42 (compare_expr)]
    "<="      [reduce using rule 42 (compare_expr)]
    "!="      [reduce using rule 42 (compare_expr)]
    "=="      [reduce using rule 42 (compare_expr)]
    $default  reduce using rule 42 (compare_expr)


State 67

   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   43             | expr "<=" expr .
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    "and"     [reduce using rule 43 (compare_expr)]
    "or"      [reduce using rule 43 (compare_expr)]
    "+"       [reduce using rule 43 (compare_expr)]
    "-"       [reduce using rule 43 (compare_expr)]
    "*"       [reduce using rule 43 (compare_expr)]
    "/"       [reduce using rule 43 (compare_expr)]
    ">"       [reduce using rule 43 (compare_expr)]
    ">="      [reduce using rule 43 (compare_expr)]
    "<"       [reduce using rule 43 (compare_expr)]
    "<="      [reduce using rule 43 (compare_expr)]
    "!="      [reduce using rule 43 (compare_expr)]
    "=="      [reduce using rule 43 (compare_expr)]
    $default  reduce using rule 43 (compare_expr)


State 68

   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr
   45             | expr "!=" expr .

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    "and"     [reduce using rule 45 (compare_expr)]
    "or"      [reduce using rule 45 (compare_expr)]
    "+"       [reduce using rule 45 (compare_expr)]
    "-"       [reduce using rule 45 (compare_expr)]
    "*"       [reduce using rule 45 (compare_expr)]
    "/"       [reduce using rule 45 (compare_expr)]
    ">"       [reduce using rule 45 (compare_expr)]
    ">="      [reduce using rule 45 (compare_expr)]
    "<"       [reduce using rule 45 (compare_expr)]
    "<="      [reduce using rule 45 (compare_expr)]
    "!="      [reduce using rule 45 (compare_expr)]
    "=="      [reduce using rule 45 (compare_expr)]
    $default  reduce using rule 45 (compare_expr)


State 69

   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   44             | expr "==" expr .
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    "and"     [reduce using rule 44 (compare_expr)]
    "or"      [reduce using rule 44 (compare_expr)]
    "+"       [reduce using rule 44 (compare_expr)]
    "-"       [reduce using rule 44 (compare_expr)]
    "*"       [reduce using rule 44 (compare_expr)]
    "/"       [reduce using rule 44 (compare_expr)]
    ">"       [reduce using rule 44 (compare_expr)]
    ">="      [reduce using rule 44 (compare_expr)]
    "<"       [reduce using rule 44 (compare_expr)]
    "<="      [reduce using rule 44 (compare_expr)]
    "!="      [reduce using rule 44 (compare_expr)]
    "=="      [reduce using rule 44 (compare_expr)]
    $default  reduce using rule 44 (compare_expr)


State 70

   33 array_access: array_access "[" expr . "]"
   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    "]"    shift, and go to state 79
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44


State 71

    9 for_loop: "for" "(" expr "," . expr "," expr ")" block

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 80
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 72

   10 for_range: "for" identifier "in" "range" . "decimal" block

    "decimal"  shift, and go to state 81


State 73

    3 stmts: stmts . stmt
   11 block: "{" stmts . "}"

    "not"         shift, and go to state 1
    "for"         shift, and go to state 2
    "if"          shift, and go to state 3
    "("           shift, and go to state 4
    "}"           shift, and go to state 82
    "identifier"  shift, and go to state 5
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 10
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    stmt          go to state 45
    conditional   go to state 18
    for_loop      go to state 19
    for_range     go to state 20
    var_decl      go to state 21
    array_access  go to state 22


State 74

   12 conditional: "if" expr block "else" . block

    "{"  shift, and go to state 50

    block  go to state 83


State 75

   15 var_decl: "identifier" "identifier" "=" expr .
   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    $default  reduce using rule 15 (var_decl)


State 76

   20 expr: identifier "(" call_args ")" .

    $default  reduce using rule 20 (expr)


State 77

   31 call_args: call_args "," . expr

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 84
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 78

   32 array_access: identifier "[" expr "]" .

    $default  reduce using rule 32 (array_access)


State 79

   33 array_access: array_access "[" expr "]" .

    $default  reduce using rule 33 (array_access)


State 80

    9 for_loop: "for" "(" expr "," expr . "," expr ")" block
   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ","    shift, and go to state 85
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44


State 81

   10 for_range: "for" identifier "in" "range" "decimal" . block

    "{"  shift, and go to state 50

    block  go to state 86


State 82

   11 block: "{" stmts "}" .

    $default  reduce using rule 11 (block)


State 83

   12 conditional: "if" expr block "else" block .

    $default  reduce using rule 12 (conditional)


State 84

   31 call_args: call_args "," expr .
   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44

    $default  reduce using rule 31 (call_args)


State 85

    9 for_loop: "for" "(" expr "," expr "," . expr ")" block

    "not"         shift, and go to state 1
    "("           shift, and go to state 4
    "identifier"  shift, and go to state 23
    "decimal"     shift, and go to state 6
    "fraction"    shift, and go to state 7
    "stringlit"   shift, and go to state 8

    identifier    go to state 9
    expr          go to state 87
    literals      go to state 11
    binop_expr    go to state 12
    unaryop_expr  go to state 13
    compare_expr  go to state 14
    array_access  go to state 22


State 86

   10 for_range: "for" identifier "in" "range" "decimal" block .

    $default  reduce using rule 10 (for_range)


State 87

    9 for_loop: "for" "(" expr "," expr "," expr . ")" block
   34 binop_expr: expr . "and" expr
   35           | expr . "or" expr
   36           | expr . "+" expr
   37           | expr . "-" expr
   38           | expr . "*" expr
   39           | expr . "/" expr
   40 compare_expr: expr . ">" expr
   41             | expr . ">=" expr
   42             | expr . "<" expr
   43             | expr . "<=" expr
   44             | expr . "==" expr
   45             | expr . "!=" expr

    "and"  shift, and go to state 33
    "or"   shift, and go to state 34
    "+"    shift, and go to state 35
    "-"    shift, and go to state 36
    "*"    shift, and go to state 37
    "/"    shift, and go to state 38
    ")"    shift, and go to state 88
    ">"    shift, and go to state 39
    ">="   shift, and go to state 40
    "<"    shift, and go to state 41
    "<="   shift, and go to state 42
    "!="   shift, and go to state 43
    "=="   shift, and go to state 44


State 88

    9 for_loop: "for" "(" expr "," expr "," expr ")" . block

    "{"  shift, and go to state 50

    block  go to state 89


State 89

    9 for_loop: "for" "(" expr "," expr "," expr ")" block .

    $default  reduce using rule 9 (for_loop)
